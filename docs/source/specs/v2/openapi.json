{
  "openapi": "3.0.0",
  "info": {
    "description": "The API for Role Based Access Control Management Plane",
    "version": "2.0.0",
    "title": "Role Based Access Control",
    "license": {
      "name": "AGPL-3.0",
      "url": "https://opensource.org/licenses/AGPL-3.0"
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ],
  "tags": [
    {
      "name": "Workspace",
      "description": "Operations about workspaces"
    }
  ],
  "paths": {
    "/workspaces/": {
      "post": {
        "tags": [
          "Workspace"
        ],
        "summary": "Create a workspace in a tenant",
        "operationId": "createWorkspace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              }
            }
          },
          "description": "Workspace to create in tenant",
          "required": true
        },
        "responses": {
          "201": {
            "description": "An object describing the workspace",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request format or missing required fields. Ensure the request body matches the schema and all required fields are provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required to access this resource."
          },
          "403": {
            "description": "Forbidden - You do not have permission to create a workspace.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "List the workspaces for a tenant",
        "description": "By default, responses are sorted in ascending order by workspace name",
        "operationId": "listWorkspaces",
        "parameters": [
          {
            "$ref": "#/components/parameters/QueryLimit"
          },
          {
            "$ref": "#/components/parameters/QueryOffset"
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "A list of UUIDs to filter listed workspaces.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "order_by",
            "required": false,
            "description": "Parameter for ordering workspaces by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-name",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "modified"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of workspace objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspacePagination"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions to get the workspace",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{uuid}/": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "Get a workspace in tenant",
        "description": "Get a workspace in tenant",
        "operationId": "getWorkspace",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "ID of the workspace to edit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A workspace object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions to get the workspace",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspace"
        ],
        "summary": "Edit a workspace",
        "description": "Edit the workspace name or description",
        "operationId": "editWorkspace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdateIn"
              }
            }
          },
          "description": "Updates to workspace object",
          "required": true
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "ID of the workspace to edit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "An object describing the updated workspace",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions to update the workspace",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspace"
        ],
        "summary": "Delete a workspace in a tenant",
        "operationId": "deleteWorkspace",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "ID of the workspace to delete",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Workspace deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions to delete the workspace",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
  },
  "servers": [
    {
      "url": "https://console.redhat.com/{basePath}",
      "description": "Production Server",
      "variables": {
        "basePath": {
          "default": "api/rbac/v2"
        }
      }
    },
    {
      "url": "https://console.stage.redhat.com/{basePath}",
      "description": "Staging Server",
      "variables": {
        "basePath": {
          "default": "api/rbac/v2"
        }
      }
    },
    {
      "url": "http://localhost:{port}/{basePath}",
      "description": "Development Server",
      "variables": {
        "port": {
          "default": "8000"
        },
        "basePath": {
          "default": "api/rbac/v2"
        }
      }
    }
  ],
  "components": {
    "parameters": {
      "QueryOffset": {
        "in": "query",
        "name": "offset",
        "required": false,
        "description": "Parameter for selecting the offset of data.",
        "schema": {
          "type": "integer",
          "default": 0,
          "minimum": 0
        }
      },
      "QueryLimit": {
        "in": "query",
        "name": "limit",
        "required": false,
        "description": "Parameter for selecting the amount of data returned.",
        "schema": {
          "type": "integer",
          "default": 10,
          "minimum": 1,
          "maximum": 1000
        }
      }
    },
    "securitySchemes": {
      "basic_auth": {
        "type": "http",
        "description": "The userid/password is needed when accessing this API externally",
        "scheme": "basic"
      }
    },
    "schemas": {
      "Error": {
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Not found."
                },
                "status": {
                  "type": "string",
                  "example": "403"
                }
              }
            }
          }
        }
      },
      "ErrorNotFound": {
        "description": "Error structure for the \"Not Found\" responses.",
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "detail": {
                  "description": "Detail of the error.",
                  "type": "string",
                  "example": "Not found."
                },
                "status": {
                  "description": "Status of the response",
                  "type": "string",
                  "example": "404"
                },
                "source": {
                  "description": "Source of the error.",
                  "type": "string",
                  "example": "principals"
                }
              }
            }
          }
        }
      },
      "Error403": {
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "You do not have permission to perform this action."
                },
                "source": {
                  "type": "string",
                  "example": "detail"
                },
                "status": {
                  "type": "string",
                  "example": "403"
                }
              }
            }
          }
        }
      },
      "UUID": {
        "type": "object",
        "required": [
          "uuid"
        ],
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "example": "57e60f90-8c0c-4bd1-87a0-2143759aae1c"
          }
        }
      },
      "Timestamp": {
        "type": "object",
        "required": [
          "created",
          "modified"
        ],
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2019-01-21T17:32:28Z"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "example": "2019-03-04T07:25:58Z"
          }
        }
      },
      "PaginationMeta": {
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "example": 30
          }
        }
      },
      "PaginationLinks": {
        "properties": {
          "first": {
            "type": "string",
            "format": "uri",
            "example": "/api/v2/(resources)/?offset=0&limit=10"
          },
          "previous": {
            "type": "string",
            "format": "uri",
            "example": "/api/v2/(resources)/?offset=20&limit=10"
          },
          "next": {
            "type": "string",
            "format": "uri",
            "example": "/api/v2/(resources)/?offset=40&limit=10"
          },
          "last": {
            "type": "string",
            "format": "uri",
            "example": "/api/v2/(resources)/?offset=90&limit=10"
          }
        }
      },
      "ListPagination": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinks"
          }
        }
      },
      "Status": {
        "required": [
          "api_version"
        ],
        "properties": {
          "api_version": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "commit": {
            "type": "string",
            "example": "178d2ea"
          }
        }
      },
      "Workspace": {
        "required": [
          "name",
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Workspace A"
          },
          "description": {
            "type": "string",
            "example": "A description of Workspace A"
          }
        }
      },
      "WorkspaceUpdateIn": {
        "required": [
          "name",
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Workspace A"
          },
          "description": {
            "type": "string",
            "example": "Description for Workspace A"
          }
        }
      },
      "WorkspaceOut": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Workspace"
          },
          {
            "$ref": "#/components/schemas/UUID"
          },
          {
            "$ref": "#/components/schemas/Timestamp"
          }
        ]
      },
      "WorkspacePagination": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ListPagination"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WorkspaceOut"
                }
              }
            }
          }
        ]
      }
    }
  }
}